# Geany's snippets configuration file
#
# use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
# use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode.
# use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
# use %key% for all keys defined in the [Special] section.
# use %cursor% to define where the cursor should be placed after completion. You can define multiple
#     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#     position in the completed snippet.
# You can define a section for each supported filetype to overwrite default settings, the section
# name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#
# Additionally, you can use most of the template wildcards like {developer} or {date} in the snippets.
# See the documentation for details.

# filetype names:
# ASM, C, C++, C#, CAML, D, Fortran, FreeBasic, Haskell, Haxe, Java, Pascal, VHDL, Ferite, Javascript,
# Lua, Make, O-Matrix, Perl, PHP, Python, Ruby, Sh, Tcl, CSS, Docbook, HTML, XML, Conf, Diff, LaTeX,
# reStructuredText, SQL, None

# special keys to be used in other snippets, cannot be used "standalone"
# can be used by %key%, e.g. %brace_open%
# nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
# key "wordchars" is very special, it defines the word delimiting characters when looking for
# a word to auto complete, leave commented to use the default wordchars
[Special]
brace_open=\n{\n\t
brace_close=}\n
block=\n{\n\t%cursor%\n}
block_cursor=\n{\n\t%cursor%\n}
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# Default is used for all filetypes and keys can be overwritten by [filetype] sections
[Default]
if=if(%cursor%)%block%
else=else%block%
for=for(i = 0; i < %cursor%; i++)%block%
forj=for(j = 0; j < %cursor%; j++)%block%
fork=for(k = 0; k < %cursor%; k++)%block%
while=while%(%cursor%)%block%
#do=do\n{\n\t%cursor%\n} while(%cursor%)\n%cursor%
switch=switch(%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block%
line=################################################################################
printd=printf("%d\\n", %cursor%);
prints=printf("%s\\n", %cursor%);
printf=printf("%cursor%\\n");
puts=puts(%cursor%);
spec=Name:		\nVersion:	\nRelease:	1%{?dist}\nSummary:	\nGroup:		\nLicense:	Copyright FGUP CNIIEISU. All rights reserved.\nURL:		http://cniieisu.ru/\n\nSource0: %name-%version.tar.gz\n\nBuildRequires:\nRequires:\n\n%description\n\n\n%prep\n%setup -q\n\n\n%build\n%configure\nmake %{?_smp_mflags}\n\n\n%install\n%makeinstall\n\n\n%clean\nrm -rf $RPM_BUILD_ROOT\n\n\n%files\n%defattr(-,root,root,-)\n%doc\n\n\n\n%changelog
log=* {date} {developer} <{mail}>\n- %cursor%\n
i=#include <%cursor%>
in=#include "%cursor%"

[C++]
do=do\s{\n\t%cursor%\n}\swhile(%cursor%);
main=int main(int argc, char **argv)%block_cursor%
line=/******************************************************************************/

[C]
do=do\s{\n\t%cursor%\n}\swhile(%cursor%);
main=int main(int argc, char **argv)%block_cursor%
std=#include <stdio.h>\n\nint main(int argc, char **argv)%block_cursor%
line=/******************************************************************************/
if=if(%cursor%)%block%
else=else%block%
for=for(i = 0; i < %cursor%; i++)%block%
forj=for(j = 0; j < %cursor%; j++)%block%
fork=for(k = 0; k < %cursor%; k++)%block%
while=while%(%cursor%)%block%
switch=switch(%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
def=#define 
deff=#define %cursor% do {\\\n\t%cursor%\\\n} while(0);
istd=#include <stdio.h>\n
istr=#include <string.h>\n
istl=#include <stdlib.h>\n
ifd=#ifdef %cursor%\n%cursor%\n#endif
ifde=#ifdef %cursor%\n%cursor%\n#else\n%cursor%\n#endif
ifnd=#ifndef %cursor%\n%cursor%\n#endif
ifnde=#ifndef %cursor%\n%cursor%\n#else\n%cursor%\n#endif
delse=#else\n%cursor%\n#endif
defelse=#else\n%cursor%\n#endif

[Java]

[PHP]
for=for ($i = 0; $i < %cursor%; $i++)%brace_open%\n%brace_close%
forj=for ($j = 0; $j < %cursor%; $j++)%brace_open%\n%brace_close%
fork=for ($k = 0; $k < %cursor%; $k++)%brace_open%\n%brace_close%
foreach=foreach (%cursor% as $v)%brace_open%\n%brace_close%
explode_nl=explode("\\n", str_replace("\\r", '', %cursor%))
opendir=$dir = '';\nif ($dh = opendir($dir)) %brace_open%while (($file = readdir($dh)) !== false) \n\t{\n\t\tif($file != '.' && $file != '..')\n\t\t{\n\t\t\t%cursor%\n\t\t}\n\t}\n\tclosedir($dh);\n%brace_close%

[Python]
for=for i in xrange(%cursor%):\n\t%cursor%
if=if %cursor%:\n\t%cursor%
elif=elif %cursor%:\n\t%cursor%
else=else:\n\t%cursor%
while=while %cursor%:\n\t%cursor%
try=try:\n\t%cursor%\nexcept Exception, ex:\n\t
with=with %cursor%:\n\t%cursor%
def=def %cursor% (%cursor%):\n\t""" Function doc """\n\t%cursor%
class=class %cursor%:\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
py=#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n%cursor%

[HTML]
# by Tomasz Karbownicki <tomasz@karbownicki.com>
# top
html5=<!DOCTYPE html>\n<html lang="en">\n<head>\n\t<meta charset="utf-8" />\n\t<title>%cursor%</title>\n</head>\n<body>\n\t%cursor%\n</body>\n</html>
html=<html lang="%cursor%">\n\t%cursor%\n</html>
head=<head>\n\t%cursor%\n</head>
js=<script type="text/javascript">\n\t%cursor%\n</script>
js2=<script src="%cursor%" type="text/javascript"></script>
css=<style type="text/css">\n\t%cursor%\n</style>
css2=<link href="%cursor%" rel="stylesheet" type="text/css" />
rss=<link rel="alternate" type="application/rss+xml" title="%cursor%" href="%cursor%" />
title=<title>%cursor%</title>
utf=<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
ie7=<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
refresh=<meta http-equiv="refresh" content="2;url=%cursor%" />
body=<body>\n\t%cursor%\n</body>
# table
table=<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>%cursor%</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>%cursor%</td>\n\t\t</tr>\n\t</tbody>\n</table>
td=<td>%cursor%</td>
tr=<tr>%cursor%</tr>
th=<th>%cursor%</th>
caption=<caption>%cursor%</caption>
# form
form=<form action="%cursor%" method="post">\n\n\t<input type="submit" value="%cursor%" />\n</form>
formp=<form action="%cursor%" method="post">\n\n\t<p>{{ form.as_p }}</p>\n<p><input type="submit" value="%cursor%" /></p>\n</form>
label=<label for="%cursor%"></label>
input=<input type="text" name="%cursor%" value="%cursor%" id="%cursor%" />
pass=<input type="password" name="%cursor%" id="%cursor%" />
textarea=<textarea name="%cursor%" cols="50" rows="10" id="%cursor%" ></textarea>
select=<select name="%cursor%" id="%cursor%">\n\t<option value="%cursor%"></option>\n</select>
radio=<input type="radio" name="%cursor%" value="%cursor%" />
checkbox=<input type="checkbox" name="%cursor%" value="%cursor%" />
button=<button type="%cursor%">%cursor%</button>
fieldset=<fieldset>\n\t<legend>%cursor%</legend>\n</fieldset>
# list
ul=<ul class="%cursor%">\n\t<li>%cursor%</li>\n</ul>
ol=<ol class="%cursor%">\n\t<li>%cursor%</li>\n</ol>
li=<li>%cursor%</li>
dl=<dl class="%cursor%">\n\t<dt>%cursor%</dt>\n\t<dd>%cursor%</dd>\n</dl>
dt=<dt>%cursor%</dt>
dd=<dd>%cursor%</dd>
# inline
a=<a href="%cursor%">%cursor%</a>
span=<span>%cursor%</span>
em=<em>%cursor%</em>
small=<small>%cursor%</small>
big=<big>%cursor%</big>
cite=<cite>%cursor%</cite>
strong=<strong>%cursor%</strong>
img=<img src="%cursor%" alt="%cursor%" title="%cursor%" />
thumb=<a href="%cursor%"><img src="%cursor%" alt="%cursor%" title="%cursor%" /></a>
# block
div=<div class="%cursor%">%cursor%</div>
h1=<h1>%cursor%</h1>
h2=<h2>%cursor%</h2>
h3=<h3>%cursor%</h3>
h4=<h4>%cursor%</h4>
h5=<h5>%cursor%</h5>
h6=<h6>%cursor%</h6>
p=<p>%cursor%</p>
pre=<pre>\n%cursor%\n</pre>
code=<code>%cursor%</code>
prec=<pre><code>%cursor%</code></pre>
quote=<blockquote>\n\t<p>\n\t\t%cursor%\n\t</p>\n</blockquote>
# other
cl=class="%cursor%"
id=id="%cursor%"
cmt=<!--\n\t%cursor%\n-->
cmt2=<!-- %cursor% -->
br=<br/>
hr=<hr/>
1s=&nbsp;
3s=&nbsp;&nbsp;&nbsp;
7s=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
dummyimage=<img src="http://dummyimage.com/%cursor%x%cursor%/000/fff.png" alt="" title="" />
dummyimage2=<img src="http://lorempixel.com/%cursor%/%cursor%/" alt="" title="" />
# Django templates
if={% if %cursor% %}\n\t\n{% endif %}
for={% for sth in %cursor% %}\n\t%cursor%\n{% endfor %}
dv={{ %cursor% }}
db={% %cursor% %}
dbl={% block %cursor% %}\n\t%cursor%\n{% endblock %}
trans={% trans "%cursor%" %}
# jQuery
jquery=<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
jqueryui=<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
jready=$(document).ready(function(){\n\t%cursor%\n});
jfunc=$(function(){\n\t%cursor%\n});
log=console.log('%cursor%');

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[Lua]
for=for %cursor% do\n\t\nend
while=while %cursor% do\n\t\nend
repeat=repeat\n\t\nuntil %cursor%
do=do\n\t%cursor%\nend
then=then\n\t%cursor%\nend
else=else\n\t%cursor%
if=if %cursor% then\n\t%cursor%\nend
ife=if %cursor% then\n\t%cursor%\nelse\n\t%cursor%\nend
ifee=if %cursor% then\n\t%cursor%\nelseif %cursor% then\n\t%cursor%\nelse\n\t%cursor%\nend
ifeee=if %cursor% then\n\t%cursor%\nelseif %cursor% then\n\t%cursor%\nelseif %cursor% then\n\t%cursor%\nelse\n\t%cursor%\nend
f=function(%cursor%)\n\t\nend
line=--------------------------------------------------------------------------------

[Sh]
do=do\n\t%cursor%\ndone
if=if [ %cursor% ]\nthen\n\t%cursor%\nfi
for=for %cursor% in %cursor%\ndo\n\t%cursor%\ndone
sh=#!/bin/sh\n\n
bash=#!/bin/bash\n\n
